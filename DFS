//Not completed
#include<bits/stdc++.h>
using namespace std;
class Graph
{
    vector<int> *adj;
    public:
    Graph(int n)
    {
        adj=new vector<int>[n];
    }
    void addEdge(int u,int v)
    {
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    void dfs(int k,int n)
    {
        vector<bool> vis(n,false);
        dfsUtil(vis,k);
    }
    void dfsUtil(vector<bool> vis,int k)
    {
        if(!vis[k])
        {
          vis[k]=1;
          cout<<k<<" ";   
        }
        for(auto x: adj[k])
        {
            if(!vis[x])
            dfsUtil(vis,x);
        }
    }
};
int main()
{
    Graph g(5);
    g.addEdge(1,2);
    g.addEdge(2,3);
    g.addEdge(1,3);
    g.addEdge(2,4);
    g.addEdge(1,4);
    cout<<"DFS:\t";
    g.dfs(1,5);
    return 0;
}
